{"ast":null,"code":"var _jsxFileName = \"/home/mahnoor/google-place-autocomplete/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, StandaloneSearchBox, LoadScript } from '@react-google-maps/api';\nimport { fetchPlaces } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [searchBox, setSearchBox] = useState(null);\n  const selectedPlace = useSelector(state => state.place);\n  const dispatch = useDispatch();\n  const [infoWindowOpen, setInfoWindowOpen] = useState(false);\n  const [mapCenter, setMapCenter] = useState({\n    lat: 0,\n    lng: 0\n  }); // Initial center coordinates\n\n  useEffect(() => {\n    if (selectedPlace.lat && selectedPlace.lng) {\n      setMapCenter({\n        lat: selectedPlace.lat,\n        lng: selectedPlace.lng\n      });\n    }\n  }, [selectedPlace]);\n  const handleLoad = ref => {\n    setSearchBox(ref);\n  };\n  const handlePlacesChanged = () => {\n    if (searchBox) {\n      const places = searchBox.getPlaces();\n      dispatch(fetchPlaces(places));\n    }\n  };\n  const handleMarkerClick = () => {\n    setInfoWindowOpen(!infoWindowOpen);\n  };\n  const handleInfoWindowClose = () => {\n    setInfoWindowOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"AIzaSyCLM4F1os4AJCCgA-Uqre-pcoU12WST2Rs\",\n      libraries: [\"places\"],\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: mapCenter,\n        zoom: 14,\n        mapContainerStyle: {\n          height: '400px',\n          width: '100%'\n        },\n        children: [selectedPlace.lat && selectedPlace.lng && /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onClick: handleMarkerClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), infoWindowOpen && selectedPlace.lat && selectedPlace.lng && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          position: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onCloseClick: handleInfoWindowClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n          onLoad: handleLoad,\n          onPlacesChanged: handlePlacesChanged,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"SFbV819CQDwppqg0YWbk7/0dP4E=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","GoogleMap","Marker","InfoWindow","StandaloneSearchBox","LoadScript","fetchPlaces","jsxDEV","_jsxDEV","Map","_s","searchBox","setSearchBox","selectedPlace","state","place","dispatch","infoWindowOpen","setInfoWindowOpen","mapCenter","setMapCenter","lat","lng","handleLoad","ref","handlePlacesChanged","places","getPlaces","handleMarkerClick","handleInfoWindowClose","children","googleMapsApiKey","libraries","center","zoom","mapContainerStyle","height","width","position","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onCloseClick","name","onLoad","onPlacesChanged","type","placeholder","_c","$RefreshReg$"],"sources":["/home/mahnoor/google-place-autocomplete/src/components/Map.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, StandaloneSearchBox, LoadScript } from '@react-google-maps/api';\nimport { fetchPlaces } from '../redux/actions';\n\nconst Map = () => {\n  const [searchBox, setSearchBox] = useState(null);\n  const selectedPlace = useSelector((state) => state.place);\n  const dispatch = useDispatch();\n  const [infoWindowOpen, setInfoWindowOpen] = useState(false);\n  const [mapCenter, setMapCenter] = useState({ lat: 0, lng: 0 }); // Initial center coordinates\n\n  useEffect(() => {\n    if (selectedPlace.lat && selectedPlace.lng) {\n      setMapCenter({ lat: selectedPlace.lat, lng: selectedPlace.lng });\n    }\n  }, [selectedPlace]);\n\n  const handleLoad = (ref) => {\n    setSearchBox(ref);\n  };\n\n  const handlePlacesChanged = () => {\n    if (searchBox) {\n      const places = searchBox.getPlaces();\n      dispatch(fetchPlaces(places));\n    }\n  };\n\n  const handleMarkerClick = () => {\n    setInfoWindowOpen(!infoWindowOpen);\n  };\n\n  const handleInfoWindowClose = () => {\n    setInfoWindowOpen(false);\n  };\n\n  return (\n    <div>\n      <LoadScript googleMapsApiKey=\"AIzaSyCLM4F1os4AJCCgA-Uqre-pcoU12WST2Rs\" libraries={[\"places\"]}>\n        <GoogleMap\n          center={mapCenter}\n          zoom={14}\n          mapContainerStyle={{ height: '400px', width: '100%' }}\n        >\n          {selectedPlace.lat && selectedPlace.lng && (\n            <Marker\n              position={{ lat: selectedPlace.lat, lng: selectedPlace.lng }}\n              onClick={handleMarkerClick}\n            />\n          )}\n          {infoWindowOpen && selectedPlace.lat && selectedPlace.lng && (\n            <InfoWindow\n              position={{ lat: selectedPlace.lat, lng: selectedPlace.lng }}\n              onCloseClick={handleInfoWindowClose}\n            >\n              <div>{selectedPlace.name}</div>\n            </InfoWindow>\n          )}\n          <StandaloneSearchBox onLoad={handleLoad} onPlacesChanged={handlePlacesChanged}>\n            <input type=\"text\" placeholder=\"Search places\" />\n          </StandaloneSearchBox>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}