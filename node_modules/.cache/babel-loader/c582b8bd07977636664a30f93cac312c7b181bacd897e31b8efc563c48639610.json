{"ast":null,"code":"var _jsxFileName = \"/home/mahnoor/google-place-autocomplete/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, LoadScript } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const selectedPlace = useSelector(state => state.place);\n  const [infoWindowOpen, setInfoWindowOpen] = useState(false);\n  const handleMarkerClick = () => {\n    setInfoWindowOpen(true);\n  };\n  const handleInfoWindowClose = () => {\n    setInfoWindowOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"YOUR_API_KEY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: {\n          lat: selectedPlace.lat,\n          lng: selectedPlace.lng\n        },\n        zoom: 14,\n        mapContainerStyle: {\n          height: '400px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onClick: handleMarkerClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), infoWindowOpen && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          anchor: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onCloseClick: handleInfoWindowClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"0heYHv7pToD24wmJhWDJFaN6Myw=\", false, function () {\n  return [useSelector];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useSelector","GoogleMap","Marker","InfoWindow","LoadScript","jsxDEV","_jsxDEV","Map","_s","selectedPlace","state","place","infoWindowOpen","setInfoWindowOpen","handleMarkerClick","handleInfoWindowClose","children","googleMapsApiKey","center","lat","lng","zoom","mapContainerStyle","height","width","position","onClick","fileName","_jsxFileName","lineNumber","columnNumber","anchor","onCloseClick","name","_c","$RefreshReg$"],"sources":["/home/mahnoor/google-place-autocomplete/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, LoadScript } from '@react-google-maps/api';\n\nconst Map = () => {\n  const selectedPlace = useSelector((state) => state.place);\n  const [infoWindowOpen, setInfoWindowOpen] = useState(false);\n\n  const handleMarkerClick = () => {\n    setInfoWindowOpen(true);\n  };\n\n  const handleInfoWindowClose = () => {\n    setInfoWindowOpen(false);\n  };\n\n  return (\n    <div>\n      <LoadScript googleMapsApiKey=\"YOUR_API_KEY\">\n        <GoogleMap\n          center={{ lat: selectedPlace.lat, lng: selectedPlace.lng }}\n          zoom={14}\n          mapContainerStyle={{ height: '400px', width: '100%' }}\n        >\n          <Marker position={{ lat: selectedPlace.lat, lng: selectedPlace.lng }} onClick={handleMarkerClick} />\n          {infoWindowOpen && (\n            <InfoWindow anchor={{ lat: selectedPlace.lat, lng: selectedPlace.lng }} onCloseClick={handleInfoWindowClose}>\n              <div>{selectedPlace.name}</div>\n            </InfoWindow>\n          )}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,SAAS,EAAEC,MAAM,EAAEC,UAAU,EAAEC,UAAU,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnF,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,aAAa,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,KAAK,CAAC;EACzD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMe,iBAAiB,GAAGA,CAAA,KAAM;IAC9BD,iBAAiB,CAAC,IAAI,CAAC;EACzB,CAAC;EAED,MAAME,qBAAqB,GAAGA,CAAA,KAAM;IAClCF,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAAU,QAAA,eACEV,OAAA,CAACF,UAAU;MAACa,gBAAgB,EAAC,cAAc;MAAAD,QAAA,eACzCV,OAAA,CAACL,SAAS;QACRiB,MAAM,EAAE;UAAEC,GAAG,EAAEV,aAAa,CAACU,GAAG;UAAEC,GAAG,EAAEX,aAAa,CAACW;QAAI,CAAE;QAC3DC,IAAI,EAAE,EAAG;QACTC,iBAAiB,EAAE;UAAEC,MAAM,EAAE,OAAO;UAAEC,KAAK,EAAE;QAAO,CAAE;QAAAR,QAAA,gBAEtDV,OAAA,CAACJ,MAAM;UAACuB,QAAQ,EAAE;YAAEN,GAAG,EAAEV,aAAa,CAACU,GAAG;YAAEC,GAAG,EAAEX,aAAa,CAACW;UAAI,CAAE;UAACM,OAAO,EAAEZ;QAAkB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACnGlB,cAAc,iBACbN,OAAA,CAACH,UAAU;UAAC4B,MAAM,EAAE;YAAEZ,GAAG,EAAEV,aAAa,CAACU,GAAG;YAAEC,GAAG,EAAEX,aAAa,CAACW;UAAI,CAAE;UAACY,YAAY,EAAEjB,qBAAsB;UAAAC,QAAA,eAC1GV,OAAA;YAAAU,QAAA,EAAMP,aAAa,CAACwB;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrB,CACb;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV,CAAC;AAACtB,EAAA,CA9BID,GAAG;EAAA,QACeP,WAAW;AAAA;AAAAkC,EAAA,GAD7B3B,GAAG;AAgCT,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}