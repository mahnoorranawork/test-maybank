{"ast":null,"code":"var _jsxFileName = \"/home/mahnoor/google-place-autocomplete/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, StandaloneSearchBox, LoadScript } from '@react-google-maps/api';\nimport { fetchPlaces } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [searchBox, setSearchBox] = useState(null);\n  const selectedPlace = useSelector(state => state.place);\n  const dispatch = useDispatch();\n  const handleLoad = ref => {\n    setSearchBox(ref);\n  };\n  const handlePlacesChanged = () => {\n    if (searchBox) {\n      const places = searchBox.getPlaces();\n      dispatch(fetchPlaces(places));\n    }\n  };\n\n  // Rest of the code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"YOUR_API_KEY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: {\n          lat: selectedPlace.lat,\n          lng: selectedPlace.lng\n        },\n        zoom: 14,\n        mapContainerStyle: {\n          height: '400px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onClick: handleMarkerClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), infoWindowOpen && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          anchor: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onCloseClick: handleInfoWindowClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n          onLoad: handleLoad,\n          onPlacesChanged: handlePlacesChanged,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"28JWkvNvF2Xsaj9oHzECfA5Gojw=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","GoogleMap","Marker","InfoWindow","StandaloneSearchBox","LoadScript","fetchPlaces","jsxDEV","_jsxDEV","Map","_s","searchBox","setSearchBox","selectedPlace","state","place","dispatch","handleLoad","ref","handlePlacesChanged","places","getPlaces","children","googleMapsApiKey","center","lat","lng","zoom","mapContainerStyle","height","width","position","onClick","handleMarkerClick","fileName","_jsxFileName","lineNumber","columnNumber","infoWindowOpen","anchor","onCloseClick","handleInfoWindowClose","name","onLoad","onPlacesChanged","type","placeholder","_c","$RefreshReg$"],"sources":["/home/mahnoor/google-place-autocomplete/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, StandaloneSearchBox, LoadScript } from '@react-google-maps/api';\nimport { fetchPlaces } from '../actions';\n\n\nconst Map = () => {\n  const [searchBox, setSearchBox] = useState(null);\n  const selectedPlace = useSelector((state) => state.place);\n  const dispatch = useDispatch();\n\n  const handleLoad = (ref) => {\n    setSearchBox(ref);\n  };\n\n  const handlePlacesChanged = () => {\n    if (searchBox) {\n      const places = searchBox.getPlaces();\n      dispatch(fetchPlaces(places));\n    }\n  };\n\n  // Rest of the code...\n\n  return (\n    <div>\n      <LoadScript googleMapsApiKey=\"YOUR_API_KEY\">\n        <GoogleMap\n          center={{ lat: selectedPlace.lat, lng: selectedPlace.lng }}\n          zoom={14}\n          mapContainerStyle={{ height: '400px', width: '100%' }}\n        >\n          <Marker position={{ lat: selectedPlace.lat, lng: selectedPlace.lng }} onClick={handleMarkerClick} />\n          {infoWindowOpen && (\n            <InfoWindow anchor={{ lat: selectedPlace.lat, lng: selectedPlace.lng }} onCloseClick={handleInfoWindowClose}>\n              <div>{selectedPlace.name}</div>\n            </InfoWindow>\n          )}\n          <StandaloneSearchBox onLoad={handleLoad} onPlacesChanged={handlePlacesChanged}>\n            <input type=\"text\" placeholder=\"Search places\" />\n          </StandaloneSearchBox>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}