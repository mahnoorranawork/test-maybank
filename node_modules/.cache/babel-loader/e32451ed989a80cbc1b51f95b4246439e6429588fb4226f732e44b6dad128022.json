{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.snapToRoads = exports.defaultParamsSerializer = exports.defaultUrl = void 0;\nconst client_1 = require(\"../client\");\nconst serialize_1 = require(\"../serialize\");\nexports.defaultUrl = \"https://roads.googleapis.com/v1/snapToRoads\";\nexports.defaultParamsSerializer = (0, serialize_1.serializer)({\n  path: o => o.map(serialize_1.latLngToString)\n}, exports.defaultUrl);\nfunction snapToRoads(_a, axiosInstance) {\n  var {\n      params,\n      method = \"get\",\n      url = exports.defaultUrl,\n      paramsSerializer = exports.defaultParamsSerializer\n    } = _a,\n    config = __rest(_a, [\"params\", \"method\", \"url\", \"paramsSerializer\"]);\n  if (axiosInstance === void 0) {\n    axiosInstance = client_1.defaultAxiosInstance;\n  }\n  return axiosInstance(Object.assign({\n    params,\n    method,\n    url,\n    paramsSerializer\n  }, config));\n}\nexports.snapToRoads = snapToRoads;","map":{"version":3,"names":["client_1","require","serialize_1","exports","defaultUrl","defaultParamsSerializer","serializer","path","o","map","latLngToString","snapToRoads","_a","axiosInstance","params","method","url","paramsSerializer","config","__rest","defaultAxiosInstance","Object","assign"],"sources":["/home/mahnoor/google-place-autocomplete/node_modules/@googlemaps/google-maps-services-js/src/roads/snaptoroads.ts"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LatLng, SnappedPoint, RequestParams } from \"../common\";\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { defaultAxiosInstance } from \"../client\";\nimport { serializer, latLngToString } from \"../serialize\";\n\nexport interface SnapToRoadsRequest extends Partial<AxiosRequestConfig> {\n  params: {\n    /**\n     * The path to be snapped. The `path` parameter accepts a list of latitude/longitude pairs.\n     * Latitude and longitude values should be separated by commas. Coordinates should be separated by the pipe character: `\"|\"`.\n     * For example: `path=60.170880,24.942795|60.170879,24.942796|60.170877,24.942796`.\n     *\n     * **Note:** The snapping algorithm works best for points that are not too far apart.\n     * If you observe odd snapping behavior, try creating paths that have points closer together.\n     * To ensure the best snap-to-road quality, you should aim to provide paths on which consecutive pairs\n     *  of points are within 300m of each other. This will also help in handling any isolated, long jumps between\n     * consecutive points caused by GPS signal loss, or noise.\n     */\n    path: LatLng[];\n    /**\n     * Whether to interpolate a path to include all points forming the full road-geometry.\n     * When true, additional interpolated points will also be returned, resulting in a path that smoothly follows\n     * the geometry of the road, even around corners and through tunnels.\n     * Interpolated paths will most likely contain more points than the original path.\n     *\n     * @default false\n     */\n    interpolate?: boolean;\n    } & RequestParams;\n}\n\nexport interface SnapToRoadsResponse extends AxiosResponse {\n  data: {\n    /** An array of snapped points. */\n    snappedPoints: SnappedPoint[];\n  };\n}\nexport const defaultUrl = \"https://roads.googleapis.com/v1/snapToRoads\";\nexport const defaultParamsSerializer = serializer({\n  path: o => o.map(latLngToString)\n}, defaultUrl);\n\nexport function snapToRoads(\n  {\n    params,\n    method = \"get\",\n    url = defaultUrl,\n    paramsSerializer = defaultParamsSerializer,\n    ...config\n  }: SnapToRoadsRequest,\n  axiosInstance: AxiosInstance = defaultAxiosInstance\n): Promise<SnapToRoadsResponse> {\n  return axiosInstance({\n    params,\n    method,\n    url,\n    paramsSerializer,\n    ...config\n  }) as Promise<SnapToRoadsResponse>;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAAA,QAAA,GAAAC,OAAA;AACA,MAAAC,WAAA,GAAAD,OAAA;AAkCaE,OAAA,CAAAC,UAAU,GAAG,6CAA6C;AAC1DD,OAAA,CAAAE,uBAAuB,GAAG,IAAAH,WAAA,CAAAI,UAAU,EAAC;EAChDC,IAAI,EAAEC,CAAC,IAAIA,CAAC,CAACC,GAAG,CAACP,WAAA,CAAAQ,cAAc;CAChC,EAAEP,OAAA,CAAAC,UAAU,CAAC;AAEd,SAAgBO,WAAWA,CACzBC,EAMqB,EACrBC,aAAmD;MAPnD;MACEC,MAAM;MACNC,MAAM,GAAG,KAAK;MACdC,GAAG,GAAGb,OAAA,CAAAC,UAAU;MAChBa,gBAAgB,GAAGd,OAAA,CAAAE;IAAuB,IAAAO,EAEvB;IADhBM,MAAM,GAAAC,MAAA,CAAAP,EAAA,EALX,+CAMC,CADU;EAEX,IAAAC,aAAA;IAAAA,aAAA,GAA+Bb,QAAA,CAAAoB,oBAAoB;EAAA;EAEnD,OAAOP,aAAa,CAAAQ,MAAA,CAAAC,MAAA;IAClBR,MAAM;IACNC,MAAM;IACNC,GAAG;IACHC;EAAgB,GACbC,MAAM,EACuB;AACpC;AAjBAf,OAAA,CAAAQ,WAAA,GAAAA,WAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}