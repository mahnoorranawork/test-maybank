{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.textSearch = exports.defaultParamsSerializer = exports.defaultUrl = void 0;\nconst client_1 = require(\"../client\");\nconst serialize_1 = require(\"../serialize\");\nexports.defaultUrl = \"https://maps.googleapis.com/maps/api/place/textsearch/json\";\nexports.defaultParamsSerializer = (0, serialize_1.serializer)({\n  location: serialize_1.latLngToString\n}, exports.defaultUrl);\nfunction textSearch(_a, axiosInstance) {\n  var {\n      params,\n      method = \"get\",\n      url = exports.defaultUrl,\n      paramsSerializer = exports.defaultParamsSerializer\n    } = _a,\n    config = __rest(_a, [\"params\", \"method\", \"url\", \"paramsSerializer\"]);\n  if (axiosInstance === void 0) {\n    axiosInstance = client_1.defaultAxiosInstance;\n  }\n  return axiosInstance(Object.assign({\n    params,\n    method,\n    url,\n    paramsSerializer\n  }, config));\n}\nexports.textSearch = textSearch;","map":{"version":3,"names":["client_1","require","serialize_1","exports","defaultUrl","defaultParamsSerializer","serializer","location","latLngToString","textSearch","_a","axiosInstance","params","method","url","paramsSerializer","config","__rest","defaultAxiosInstance","Object","assign"],"sources":["/home/mahnoor/google-place-autocomplete/node_modules/@googlemaps/google-maps-services-js/src/places/textsearch.ts"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ResponseData, LatLng, Language, PlaceType1, Place, RequestParams } from \"../common\";\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { defaultAxiosInstance } from \"../client\";\nimport { serializer, latLngToString } from \"../serialize\";\n\nexport interface TextSearchRequest extends Partial<AxiosRequestConfig> {\n  params: {\n    /**\n     * The text string on which to search, for example: \"restaurant\" or \"123 Main Street\".\n     * The Google Places service will return candidate matches based on this string and order the results\n     * based on their perceived relevance. This parameter becomes optional if the `type` parameter\n     * is also used in the search request.\n     */\n    query: string;\n    /**\n     * The region code, specified as a ccTLD (country code top-level domain) two-character value.\n     * Most ccTLD codes are identical to ISO 3166-1 codes, with some exceptions.\n     * This parameter will only influence, not fully restrict, search results.\n     * If more relevant results exist outside of the specified region, they may be included.\n     * When this parameter is used, the country name is omitted from the resulting `formatted_address`\n     * for results in the specified region.\n     */\n    region?: string;\n    /**\n     * The latitude/longitude around which to retrieve place information.\n     * This must be specified as latitude,longitude. If you specify a location parameter,\n     * you must also specify a radius parameter.\n     */\n    location?: LatLng;\n    /**\n     * Defines the distance (in meters) within which to bias place results.\n     * The maximum allowed radius is 50 000 meters.\n     * Results inside of this region will be ranked higher than results outside of the search circle;\n     * however, prominent results from outside of the search radius may be included.\n     */\n    radius?: number;\n    /**\n     * The language code, indicating in which language the results should be returned, if possible.\n     * Note that we often update supported languages so this list may not be exhaustive\n     */\n    language?: Language;\n    /**\n     * Restricts results to only those places within the specified price level.\n     * Valid values are in the range from 0 (most affordable) to 4 (most expensive), inclusive.\n     * The exact amount indicated by a specific value will vary from region to region.\n     */\n    minprice?: number;\n    /**\n     * Restricts results to only those places within the specified price level.\n     * Valid values are in the range from 0 (most affordable) to 4 (most expensive), inclusive.\n     * The exact amount indicated by a specific value will vary from region to region.\n     */\n    maxprice?: number;\n    /**\n     * Returns only those places that are open for business at the time the query is sent.\n     * Places that do not specify opening hours in the Google Places database will not be returned\n     * if you include this parameter in your query.\n     */\n    opennow?: boolean;\n    /**\n     * Returns the next 20 results from a previously run search.\n     * Setting a `pagetoken` parameter will execute a search with the same parameters used previously â€”\n     * all parameters other than `pagetoken` will be ignored.\n     */\n    pagetoken?: string;\n    /**\n     * Restricts the results to places matching the specified type.\n     * Only one type may be specified (if more than one type is provided, all types following the first entry are ignored).\n     */\n    type?: PlaceType1;\n    } & RequestParams;\n}\n\nexport interface TextSearchResponseData extends ResponseData {\n  results: Place[];\n}\n\nexport interface TextSearchResponse extends AxiosResponse {\n  data: TextSearchResponseData;\n}\n\nexport const defaultUrl =\n  \"https://maps.googleapis.com/maps/api/place/textsearch/json\";\n\nexport const defaultParamsSerializer = serializer({ location: latLngToString }, defaultUrl);\n\nexport function textSearch(\n  {\n    params,\n    method = \"get\",\n    url = defaultUrl,\n    paramsSerializer = defaultParamsSerializer,\n    ...config\n  }: TextSearchRequest,\n  axiosInstance: AxiosInstance = defaultAxiosInstance\n): Promise<TextSearchResponse> {\n  return axiosInstance({\n    params,\n    method,\n    url,\n    paramsSerializer,\n    ...config\n  }) as Promise<TextSearchResponse>;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA,MAAAA,QAAA,GAAAC,OAAA;AACA,MAAAC,WAAA,GAAAD,OAAA;AA8EaE,OAAA,CAAAC,UAAU,GACrB,4DAA4D;AAEjDD,OAAA,CAAAE,uBAAuB,GAAG,IAAAH,WAAA,CAAAI,UAAU,EAAC;EAAEC,QAAQ,EAAEL,WAAA,CAAAM;AAAc,CAAE,EAAEL,OAAA,CAAAC,UAAU,CAAC;AAE3F,SAAgBK,UAAUA,CACxBC,EAMoB,EACpBC,aAAmD;MAPnD;MACEC,MAAM;MACNC,MAAM,GAAG,KAAK;MACdC,GAAG,GAAGX,OAAA,CAAAC,UAAU;MAChBW,gBAAgB,GAAGZ,OAAA,CAAAE;IAAuB,IAAAK,EAExB;IADfM,MAAM,GAAAC,MAAA,CAAAP,EAAA,EALX,+CAMC,CADU;EAEX,IAAAC,aAAA;IAAAA,aAAA,GAA+BX,QAAA,CAAAkB,oBAAoB;EAAA;EAEnD,OAAOP,aAAa,CAAAQ,MAAA,CAAAC,MAAA;IAClBR,MAAM;IACNC,MAAM;IACNC,GAAG;IACHC;EAAgB,GACbC,MAAM,EACsB;AACnC;AAjBAb,OAAA,CAAAM,UAAA,GAAAA,UAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}