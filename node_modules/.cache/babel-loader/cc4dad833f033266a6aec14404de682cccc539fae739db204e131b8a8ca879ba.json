{"ast":null,"code":"var _jsxFileName = \"/home/mahnoor/google-place-autocomplete/src/components/AutocompleteInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setPlace } from '../redux/actions';\nimport { Autocomplete } from '@mui/material';\nimport { TextField } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AutocompleteInput = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const handlePlaceSelect = place => {\n    dispatch(setPlace(place));\n  };\n  const handleInputChange = (event, value) => {\n    setInputValue(value);\n  };\n  const loadPlaces = inputValue => {\n    const autocompleteService = new window.google.maps.places.AutocompleteService();\n    console.log(autocompleteService);\n    autocompleteService.getPlacePredictions({\n      input: inputValue\n    }, (predictions, status) => {\n      if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n        const places = predictions.map(prediction => ({\n          description: prediction.description,\n          place_id: prediction.place_id\n        }));\n        setOptions(places);\n      }\n    });\n  };\n  const handleOpen = () => {\n    if (inputValue) {\n      loadPlaces(inputValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Autocomplete, {\n    options: options,\n    getOptionLabel: option => option.description,\n    autoHighlight: true,\n    value: null,\n    inputValue: inputValue,\n    onInputChange: handleInputChange,\n    onChange: (event, newValue) => {\n      setInputValue(newValue ? newValue.description : '');\n      handlePlaceSelect(newValue);\n    },\n    onOpen: handleOpen,\n    renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n      ...params,\n      label: \"Search for a place\",\n      variant: \"outlined\",\n      fullWidth: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(AutocompleteInput, \"4YaGoEeNavhRE6jLi1cg+rpISpU=\", false, function () {\n  return [useDispatch];\n});\n_c = AutocompleteInput;\nexport default AutocompleteInput;\nvar _c;\n$RefreshReg$(_c, \"AutocompleteInput\");","map":{"version":3,"names":["React","useState","useDispatch","setPlace","Autocomplete","TextField","jsxDEV","_jsxDEV","AutocompleteInput","_s","dispatch","inputValue","setInputValue","options","setOptions","handlePlaceSelect","place","handleInputChange","event","value","loadPlaces","autocompleteService","window","google","maps","places","AutocompleteService","console","log","getPlacePredictions","input","predictions","status","PlacesServiceStatus","OK","map","prediction","description","place_id","handleOpen","getOptionLabel","option","autoHighlight","onInputChange","onChange","newValue","onOpen","renderInput","params","label","variant","fullWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/mahnoor/google-place-autocomplete/src/components/AutocompleteInput.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setPlace } from '../redux/actions';\nimport { Autocomplete } from '@mui/material';\nimport { TextField } from '@mui/material';\n\nconst AutocompleteInput = () => {\n  const dispatch = useDispatch();\n  const [inputValue, setInputValue] = useState('');\n  const [options, setOptions] = useState([]);\n\n  const handlePlaceSelect = (place) => {\n    dispatch(setPlace(place));\n  };\n\n  const handleInputChange = (event, value) => {\n    setInputValue(value);\n  };\n\n  const loadPlaces = (inputValue) => {\n    const autocompleteService = new window.google.maps.places.AutocompleteService();\n    console.log(autocompleteService)\n    autocompleteService.getPlacePredictions(\n      { input: inputValue },\n      (predictions, status) => {\n        if (status === window.google.maps.places.PlacesServiceStatus.OK) {\n          const places = predictions.map((prediction) => ({\n            description: prediction.description,\n            place_id: prediction.place_id,\n          }));\n          setOptions(places);\n        }\n      }\n    );\n  };\n\n  const handleOpen = () => {\n    if (inputValue) {\n      loadPlaces(inputValue);\n    }\n  };\n\n  return (\n    <Autocomplete\n      options={options}\n      getOptionLabel={(option) => option.description}\n      autoHighlight\n      value={null}\n      inputValue={inputValue}\n      onInputChange={handleInputChange}\n      onChange={(event, newValue) => {\n        setInputValue(newValue ? newValue.description : '');\n        handlePlaceSelect(newValue);\n      }}\n      onOpen={handleOpen}\n      renderInput={(params) => (\n        <TextField\n          {...params}\n          label=\"Search for a place\"\n          variant=\"outlined\"\n          fullWidth\n        />\n      )}\n    />\n  );\n};\n\nexport default AutocompleteInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAASC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMc,iBAAiB,GAAIC,KAAK,IAAK;IACnCN,QAAQ,CAACP,QAAQ,CAACa,KAAK,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1CP,aAAa,CAACO,KAAK,CAAC;EACtB,CAAC;EAED,MAAMC,UAAU,GAAIT,UAAU,IAAK;IACjC,MAAMU,mBAAmB,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACC,mBAAmB,CAAC,CAAC;IAC/EC,OAAO,CAACC,GAAG,CAACP,mBAAmB,CAAC;IAChCA,mBAAmB,CAACQ,mBAAmB,CACrC;MAAEC,KAAK,EAAEnB;IAAW,CAAC,EACrB,CAACoB,WAAW,EAAEC,MAAM,KAAK;MACvB,IAAIA,MAAM,KAAKV,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,MAAM,CAACQ,mBAAmB,CAACC,EAAE,EAAE;QAC/D,MAAMT,MAAM,GAAGM,WAAW,CAACI,GAAG,CAAEC,UAAU,KAAM;UAC9CC,WAAW,EAAED,UAAU,CAACC,WAAW;UACnCC,QAAQ,EAAEF,UAAU,CAACE;QACvB,CAAC,CAAC,CAAC;QACHxB,UAAU,CAACW,MAAM,CAAC;MACpB;IACF,CACF,CAAC;EACH,CAAC;EAED,MAAMc,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI5B,UAAU,EAAE;MACdS,UAAU,CAACT,UAAU,CAAC;IACxB;EACF,CAAC;EAED,oBACEJ,OAAA,CAACH,YAAY;IACXS,OAAO,EAAEA,OAAQ;IACjB2B,cAAc,EAAGC,MAAM,IAAKA,MAAM,CAACJ,WAAY;IAC/CK,aAAa;IACbvB,KAAK,EAAE,IAAK;IACZR,UAAU,EAAEA,UAAW;IACvBgC,aAAa,EAAE1B,iBAAkB;IACjC2B,QAAQ,EAAEA,CAAC1B,KAAK,EAAE2B,QAAQ,KAAK;MAC7BjC,aAAa,CAACiC,QAAQ,GAAGA,QAAQ,CAACR,WAAW,GAAG,EAAE,CAAC;MACnDtB,iBAAiB,CAAC8B,QAAQ,CAAC;IAC7B,CAAE;IACFC,MAAM,EAAEP,UAAW;IACnBQ,WAAW,EAAGC,MAAM,iBAClBzC,OAAA,CAACF,SAAS;MAAA,GACJ2C,MAAM;MACVC,KAAK,EAAC,oBAAoB;MAC1BC,OAAO,EAAC,UAAU;MAClBC,SAAS;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN,CAAC;AAAC9C,EAAA,CA3DID,iBAAiB;EAAA,QACJN,WAAW;AAAA;AAAAsD,EAAA,GADxBhD,iBAAiB;AA6DvB,eAAeA,iBAAiB;AAAC,IAAAgD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}