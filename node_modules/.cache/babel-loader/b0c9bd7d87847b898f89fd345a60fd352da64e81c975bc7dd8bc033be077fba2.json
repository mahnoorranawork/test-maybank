{"ast":null,"code":"var _jsxFileName = \"/home/mahnoor/google-place-autocomplete/src/components/Map.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, StandaloneSearchBox, LoadScript } from '@react-google-maps/api';\nimport { fetchPlaces } from '../actions/placesActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const [searchBox, setSearchBox] = useState(null);\n  const selectedPlace = useSelector(state => state.place);\n  const dispatch = useDispatch();\n  const [infoWindowOpen, setInfoWindowOpen] = useState(false);\n  const handleLoad = ref => {\n    setSearchBox(ref);\n  };\n  const handlePlacesChanged = () => {\n    if (searchBox) {\n      const places = searchBox.getPlaces();\n      dispatch(fetchPlaces(places));\n    }\n  };\n  const handleMarkerClick = () => {\n    // Handle marker click event\n    // For example, toggle the InfoWindow open/close state\n    setInfoWindowOpen(!infoWindowOpen);\n  };\n  const handleInfoWindowClose = () => {\n    // Handle InfoWindow close event\n    setInfoWindowOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: \"YOUR_API_KEY\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        center: {\n          lat: selectedPlace.lat,\n          lng: selectedPlace.lng\n        },\n        zoom: 14,\n        mapContainerStyle: {\n          height: '400px',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onClick: handleMarkerClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), infoWindowOpen && /*#__PURE__*/_jsxDEV(InfoWindow, {\n          anchor: {\n            lat: selectedPlace.lat,\n            lng: selectedPlace.lng\n          },\n          onCloseClick: handleInfoWindowClose,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedPlace.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StandaloneSearchBox, {\n          onLoad: handleLoad,\n          onPlacesChanged: handlePlacesChanged,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search places\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"mZJb29FuhgrpTWhuoNrP1mZBHEs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","GoogleMap","Marker","InfoWindow","StandaloneSearchBox","LoadScript","fetchPlaces","jsxDEV","_jsxDEV","Map","_s","searchBox","setSearchBox","selectedPlace","state","place","dispatch","infoWindowOpen","setInfoWindowOpen","handleLoad","ref","handlePlacesChanged","places","getPlaces","handleMarkerClick","handleInfoWindowClose","children","googleMapsApiKey","center","lat","lng","zoom","mapContainerStyle","height","width","position","onClick","fileName","_jsxFileName","lineNumber","columnNumber","anchor","onCloseClick","name","onLoad","onPlacesChanged","type","placeholder","_c","$RefreshReg$"],"sources":["/home/mahnoor/google-place-autocomplete/src/components/Map.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { GoogleMap, Marker, InfoWindow, StandaloneSearchBox, LoadScript } from '@react-google-maps/api';\nimport { fetchPlaces } from '../actions/placesActions';\n\nconst Map = () => {\n  const [searchBox, setSearchBox] = useState(null);\n  const selectedPlace = useSelector((state) => state.place);\n  const dispatch = useDispatch();\n  const [infoWindowOpen, setInfoWindowOpen] = useState(false);\n\n  const handleLoad = (ref) => {\n    setSearchBox(ref);\n  };\n\n  const handlePlacesChanged = () => {\n    if (searchBox) {\n      const places = searchBox.getPlaces();\n      dispatch(fetchPlaces(places));\n    }\n  };\n\n  const handleMarkerClick = () => {\n    // Handle marker click event\n    // For example, toggle the InfoWindow open/close state\n    setInfoWindowOpen(!infoWindowOpen);\n  };\n\n  const handleInfoWindowClose = () => {\n    // Handle InfoWindow close event\n    setInfoWindowOpen(false);\n  };\n\n  return (\n    <div>\n      <LoadScript googleMapsApiKey=\"YOUR_API_KEY\">\n        <GoogleMap\n          center={{ lat: selectedPlace.lat, lng: selectedPlace.lng }}\n          zoom={14}\n          mapContainerStyle={{ height: '400px', width: '100%' }}\n        >\n          <Marker position={{ lat: selectedPlace.lat, lng: selectedPlace.lng }} onClick={handleMarkerClick} />\n          {infoWindowOpen && (\n            <InfoWindow anchor={{ lat: selectedPlace.lat, lng: selectedPlace.lng }} onCloseClick={handleInfoWindowClose}>\n              <div>{selectedPlace.name}</div>\n            </InfoWindow>\n          )}\n          <StandaloneSearchBox onLoad={handleLoad} onPlacesChanged={handlePlacesChanged}>\n            <input type=\"text\" placeholder=\"Search places\" />\n          </StandaloneSearchBox>\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}