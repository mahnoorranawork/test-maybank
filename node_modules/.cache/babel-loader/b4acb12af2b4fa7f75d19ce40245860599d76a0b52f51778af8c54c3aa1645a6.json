{"ast":null,"code":"\"use strict\";\n\n/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.placesNearby = exports.defaultParamsSerializer = exports.defaultUrl = exports.PlacesNearbyRanking = void 0;\nconst serialize_1 = require(\"../serialize\");\nconst client_1 = require(\"../client\");\nvar PlacesNearbyRanking;\n(function (PlacesNearbyRanking) {\n  /**\n   * This option sorts results based on their importance. Ranking will favor prominent places within the specified area.\n   * Prominence can be affected by a place's ranking in Google's index, global popularity, and other factors.\n   */\n  PlacesNearbyRanking[\"prominence\"] = \"prominence\";\n  /**\n   * This option biases search results in ascending order by their distance from the specified `location`.\n   * When distance is specified, one or more of `keyword`, `name`, or `type` is required.\n   */\n  PlacesNearbyRanking[\"distance\"] = \"distance\";\n})(PlacesNearbyRanking = exports.PlacesNearbyRanking || (exports.PlacesNearbyRanking = {}));\nexports.defaultUrl = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\";\nexports.defaultParamsSerializer = (0, serialize_1.serializer)({\n  location: serialize_1.latLngToString\n}, exports.defaultUrl);\nfunction placesNearby(_a, axiosInstance) {\n  var {\n      params,\n      method = \"get\",\n      url = exports.defaultUrl,\n      paramsSerializer = exports.defaultParamsSerializer\n    } = _a,\n    config = __rest(_a, [\"params\", \"method\", \"url\", \"paramsSerializer\"]);\n  if (axiosInstance === void 0) {\n    axiosInstance = client_1.defaultAxiosInstance;\n  }\n  return axiosInstance(Object.assign({\n    params,\n    method,\n    url,\n    paramsSerializer\n  }, config));\n}\nexports.placesNearby = placesNearby;","map":{"version":3,"names":["serialize_1","require","client_1","PlacesNearbyRanking","exports","defaultUrl","defaultParamsSerializer","serializer","location","latLngToString","placesNearby","_a","axiosInstance","params","method","url","paramsSerializer","config","__rest","defaultAxiosInstance","Object","assign"],"sources":["/home/mahnoor/google-place-autocomplete/node_modules/@googlemaps/google-maps-services-js/src/places/placesnearby.ts"],"sourcesContent":["/**\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AxiosInstance, AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport {\n  Language,\n  LatLng,\n  Place,\n  RequestParams,\n  ResponseData,\n} from \"../common\";\nimport { latLngToString, serializer } from \"../serialize\";\n\nimport { defaultAxiosInstance } from \"../client\";\n\nexport enum PlacesNearbyRanking {\n  /**\n   * This option sorts results based on their importance. Ranking will favor prominent places within the specified area.\n   * Prominence can be affected by a place's ranking in Google's index, global popularity, and other factors.\n   */\n  prominence = \"prominence\",\n  /**\n   * This option biases search results in ascending order by their distance from the specified `location`.\n   * When distance is specified, one or more of `keyword`, `name`, or `type` is required.\n   */\n  distance = \"distance\",\n}\n\nexport interface PlacesNearbyRequest extends Partial<AxiosRequestConfig> {\n  params: {\n    /** The latitude/longitude around which to retrieve place information. This must be specified as latitude,longitude. */\n    location: LatLng;\n    /**\n     * Defines the distance (in meters) within which to return place results.\n     * The maximum allowed radius is 50 000 meters.\n     * Note that `radius` must not be included if `rankby=distance` is specified.\n     */\n    radius?: number;\n    /**\n     * A term to be matched against all content that Google has indexed for this place, including but not limited to\n     * name, type, and address, as well as customer reviews and other third-party content.\n     */\n    keyword?: string;\n    /**\n     * The language code, indicating in which language the results should be returned, if possible.\n     * Note that we often update supported languages so this list may not be exhaustive.\n     */\n    language?: Language;\n    /**\n     * Restricts results to only those places within the specified range.\n     * Valid values range between 0 (most affordable) to 4 (most expensive), inclusive.\n     * The exact amount indicated by a specific value will vary from region to region.\n     */\n    minprice?: number;\n    /**\n     * Restricts results to only those places within the specified range.\n     * Valid values range between 0 (most affordable) to 4 (most expensive), inclusive.\n     * The exact amount indicated by a specific value will vary from region to region.\n     */\n    maxprice?: number;\n    /**\n     * A term to be matched against all content that Google has indexed for this place.\n     * Equivalent to `keyword`. The `name` field is no longer restricted to place names.\n     * Values in this field are combined with values in the `keyword` field and passed as part of the same search string.\n     * We recommend using only the `keyword` parameter for all search terms.\n     */\n    name?: string;\n    /**\n     * Returns only those places that are open for business at the time the query is sent.\n     * Places that do not specify opening hours in the Google Places database will not be returned if you include this parameter in your query.\n     */\n    opennow?: boolean;\n    /**\n     * Specifies the order in which results are listed.\n     * Note that `rankby` must not be included if `radius` is specified.\n     *\n     * @default PlacesNearbyRanking.prominence\n     */\n    rankby?: PlacesNearbyRanking;\n    /**\n     * Restricts the results to places matching the specified type.\n     * Only one type may be specified (if more than one type is provided, all types following the first entry are ignored).\n     */\n    type?: string;\n    /**\n     * Returns the next 20 results from a previously run search.\n     * Setting a pagetoken parameter will execute a search with the same parameters used previously â€”\n     * all parameters other than pagetoken will be ignored.\n     */\n    pagetoken?: string;\n  } & RequestParams;\n}\n\nexport interface PlacesNearbyResponseData extends ResponseData {\n  results: Place[];\n}\n\nexport interface PlacesNearbyResponse extends AxiosResponse {\n  data: PlacesNearbyResponseData;\n}\n\nexport const defaultUrl =\n  \"https://maps.googleapis.com/maps/api/place/nearbysearch/json\";\n\nexport const defaultParamsSerializer = serializer({ location: latLngToString }, defaultUrl);\n\nexport function placesNearby(\n  {\n    params,\n    method = \"get\",\n    url = defaultUrl,\n    paramsSerializer = defaultParamsSerializer,\n    ...config\n  }: PlacesNearbyRequest,\n  axiosInstance: AxiosInstance = defaultAxiosInstance\n): Promise<PlacesNearbyResponse> {\n  return axiosInstance({\n    params,\n    method,\n    url,\n    paramsSerializer,\n    ...config,\n  }) as Promise<PlacesNearbyResponse>;\n}\n"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBA,MAAAA,WAAA,GAAAC,OAAA;AAEA,MAAAC,QAAA,GAAAD,OAAA;AAEA,IAAYE,mBAWX;AAXD,WAAYA,mBAAmB;EAC7B;;;;EAIAA,mBAAA,6BAAyB;EACzB;;;;EAIAA,mBAAA,yBAAqB;AACvB,CAAC,EAXWA,mBAAmB,GAAnBC,OAAA,CAAAD,mBAAmB,KAAnBC,OAAA,CAAAD,mBAAmB;AAsFlBC,OAAA,CAAAC,UAAU,GACrB,8DAA8D;AAEnDD,OAAA,CAAAE,uBAAuB,GAAG,IAAAN,WAAA,CAAAO,UAAU,EAAC;EAAEC,QAAQ,EAAER,WAAA,CAAAS;AAAc,CAAE,EAAEL,OAAA,CAAAC,UAAU,CAAC;AAE3F,SAAgBK,YAAYA,CAC1BC,EAMsB,EACtBC,aAAmD;MAPnD;MACEC,MAAM;MACNC,MAAM,GAAG,KAAK;MACdC,GAAG,GAAGX,OAAA,CAAAC,UAAU;MAChBW,gBAAgB,GAAGZ,OAAA,CAAAE;IAAuB,IAAAK,EAEtB;IADjBM,MAAM,GAAAC,MAAA,CAAAP,EAAA,EALX,+CAMC,CADU;EAEX,IAAAC,aAAA;IAAAA,aAAA,GAA+BV,QAAA,CAAAiB,oBAAoB;EAAA;EAEnD,OAAOP,aAAa,CAAAQ,MAAA,CAAAC,MAAA;IAClBR,MAAM;IACNC,MAAM;IACNC,GAAG;IACHC;EAAgB,GACbC,MAAM,EACwB;AACrC;AAjBAb,OAAA,CAAAM,YAAA,GAAAA,YAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}